# ============================================================================
# SharpFlow Dependency Update Pipeline
# Automated dependency updates and security patches
# ============================================================================

name: 🔄 Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Update type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - security

env:
  NODE_VERSION: '18'

jobs:
  # ============================================================================
  # Security Updates
  # ============================================================================
  security-updates:
    name: 🔒 Security Updates
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔒 Run security audit
        id: audit
        run: |
          echo "🔍 Running npm audit..."
          npm audit --audit-level=moderate --json > audit-results.json || true
          
          if [ -s audit-results.json ]; then
            echo "⚠️ Security vulnerabilities found"
            echo "has_vulnerabilities=true" >> $GITHUB_OUTPUT
            
            # Extract vulnerability count
            high_vulns=$(cat audit-results.json | jq '.metadata.vulnerabilities.high // 0')
            critical_vulns=$(cat audit-results.json | jq '.metadata.vulnerabilities.critical // 0')
            
            echo "high_vulnerabilities=$high_vulns" >> $GITHUB_OUTPUT
            echo "critical_vulnerabilities=$critical_vulns" >> $GITHUB_OUTPUT
          else
            echo "✅ No security vulnerabilities found"
            echo "has_vulnerabilities=false" >> $GITHUB_OUTPUT
          fi

      - name: 🔧 Apply security fixes
        if: steps.audit.outputs.has_vulnerabilities == 'true'
        run: |
          echo "🔧 Applying security fixes..."
          npm audit fix --audit-level=moderate
          
          # Check if package-lock.json was modified
          if git diff --quiet package-lock.json; then
            echo "No changes made by npm audit fix"
            echo "security_fixes_applied=false" >> $GITHUB_OUTPUT
          else
            echo "Security fixes applied"
            echo "security_fixes_applied=true" >> $GITHUB_OUTPUT
          fi

      - name: 🧪 Test after security fixes
        if: steps.audit.outputs.security_fixes_applied == 'true'
        run: |
          echo "🧪 Running tests after security fixes..."
          npm run test:ci
          npm run build

      - name: 📝 Create security update PR
        if: steps.audit.outputs.security_fixes_applied == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'fix: apply security updates'
          title: '🔒 Security Updates - Fix vulnerabilities'
          body: |
            ## 🔒 Security Updates
            
            This PR applies security fixes for detected vulnerabilities.
            
            ### 📊 Vulnerability Summary
            - **Critical**: ${{ steps.audit.outputs.critical_vulnerabilities }}
            - **High**: ${{ steps.audit.outputs.high_vulnerabilities }}
            
            ### 🔧 Changes
            - Applied `npm audit fix` to resolve security issues
            - Updated package-lock.json with secure dependency versions
            
            ### ✅ Verification
            - [x] Tests pass after security updates
            - [x] Application builds successfully
            - [x] No breaking changes detected
            
            **Auto-generated by dependency update workflow**
          branch: security-updates
          delete-branch: true
          labels: |
            security
            dependencies
            automated

  # ============================================================================
  # Dependency Updates
  # ============================================================================
  dependency-updates:
    name: 📦 Dependency Updates
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [security-updates]

    strategy:
      matrix:
        update-type: ['patch', 'minor']

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📋 Check for updates
        id: check_updates
        run: |
          echo "🔍 Checking for ${{ matrix.update-type }} updates..."
          
          # Install npm-check-updates
          npm install -g npm-check-updates
          
          # Check for updates based on type
          case "${{ matrix.update-type }}" in
            "patch")
              ncu --target patch --jsonUpgraded > updates.json || echo "{}" > updates.json
              ;;
            "minor")
              ncu --target minor --jsonUpgraded > updates.json || echo "{}" > updates.json
              ;;
            "major")
              ncu --target latest --jsonUpgraded > updates.json || echo "{}" > updates.json
              ;;
          esac
          
          # Check if updates are available
          if [ "$(cat updates.json)" = "{}" ]; then
            echo "No ${{ matrix.update-type }} updates available"
            echo "has_updates=false" >> $GITHUB_OUTPUT
          else
            echo "Updates available:"
            cat updates.json
            echo "has_updates=true" >> $GITHUB_OUTPUT
            
            # Count updates
            update_count=$(cat updates.json | jq 'length')
            echo "update_count=$update_count" >> $GITHUB_OUTPUT
          fi

      - name: 📦 Apply updates
        if: steps.check_updates.outputs.has_updates == 'true'
        run: |
          echo "📦 Applying ${{ matrix.update-type }} updates..."
          
          case "${{ matrix.update-type }}" in
            "patch")
              ncu --target patch -u
              ;;
            "minor")
              ncu --target minor -u
              ;;
            "major")
              ncu --target latest -u
              ;;
          esac
          
          # Install updated dependencies
          npm install

      - name: 🧪 Test updated dependencies
        if: steps.check_updates.outputs.has_updates == 'true'
        run: |
          echo "🧪 Testing updated dependencies..."
          
          # Run type checking
          npm run check
          
          # Run linting
          npm run lint:check
          
          # Run tests
          npm run test:ci
          
          # Build application
          npm run build
          
          echo "✅ All tests passed with updated dependencies"

      - name: 📝 Create dependency update PR
        if: steps.check_updates.outputs.has_updates == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update ${{ matrix.update-type }} dependencies'
          title: '📦 ${{ matrix.update-type }} Dependency Updates'
          body: |
            ## 📦 ${{ matrix.update-type }} Dependency Updates
            
            This PR updates ${{ steps.check_updates.outputs.update_count }} dependencies to their latest ${{ matrix.update-type }} versions.
            
            ### 🔄 Updated Dependencies
            ```json
            $(cat updates.json)
            ```
            
            ### ✅ Verification
            - [x] TypeScript compilation passes
            - [x] ESLint checks pass
            - [x] All tests pass
            - [x] Application builds successfully
            - [x] No breaking changes detected
            
            ### 📋 Review Checklist
            - [ ] Review updated dependencies for any breaking changes
            - [ ] Verify application functionality in staging
            - [ ] Check for any new security advisories
            
            **Auto-generated by dependency update workflow**
          branch: dependency-updates-${{ matrix.update-type }}
          delete-branch: true
          labels: |
            dependencies
            ${{ matrix.update-type }}
            automated

  # ============================================================================
  # Update Summary
  # ============================================================================
  update-summary:
    name: 📋 Update Summary
    runs-on: ubuntu-latest
    needs: [security-updates, dependency-updates]
    if: always()

    steps:
      - name: 📋 Generate update summary
        run: |
          echo "📦 Dependency Update Summary"
          echo "============================"
          echo ""
          echo "🔒 Security Updates: ${{ needs.security-updates.result }}"
          echo "📦 Dependency Updates: ${{ needs.dependency-updates.result }}"
          echo ""
          
          if [[ "${{ needs.security-updates.result }}" == "success" && 
                "${{ needs.dependency-updates.result }}" == "success" ]]; then
            echo "✅ All dependency updates completed successfully!"
          else
            echo "⚠️ Some dependency updates may have failed."
            echo "Please review the workflow logs for details."
          fi

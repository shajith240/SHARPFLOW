# ============================================================================
# SharpFlow Lead Generation Platform - Development Docker Compose
# Multi-tenant SaaS with AI agents - Development Environment
# ============================================================================

version: '3.8'

services:
  # SharpFlow Application (Development)
  sharpflow-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder  # Use builder stage for development
    container_name: sharpflow-dev
    ports:
      - "3000:3000"
    environment:
      # Server Configuration
      - NODE_ENV=development
      - PORT=3000
      
      # Database Configuration (Supabase)
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - DATABASE_URL=${DATABASE_URL}
      
      # Authentication
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      
      # AI Services
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      
      # External Services
      - APIFY_TOKEN=${APIFY_TOKEN}
      
      # Email Configuration
      - GMAIL_CLIENT_ID=${GMAIL_CLIENT_ID}
      - GMAIL_CLIENT_SECRET=${GMAIL_CLIENT_SECRET}
      - GMAIL_REFRESH_TOKEN=${GMAIL_REFRESH_TOKEN}
      
      # PayPal Configuration
      - PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}
      - PAYPAL_CLIENT_SECRET=${PAYPAL_CLIENT_SECRET}
      - PAYPAL_ENVIRONMENT=${PAYPAL_ENVIRONMENT:-sandbox}
      
      # Redis Configuration
      - REDIS_URL=redis://redis:6379
      - USE_REDIS=true
      
    volumes:
      # Mount source code for hot reload in development
      - .:/app
      - /app/node_modules  # Prevent overwriting node_modules
      - /app/dist          # Prevent overwriting built files
    depends_on:
      - redis
    networks:
      - sharpflow-network
    restart: unless-stopped
    command: npm run dev

  # Redis for Email Monitoring Queues
  redis:
    image: redis:7-alpine
    container_name: sharpflow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sharpflow-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL (Optional - for local development without Supabase)
  # Uncomment if you want to use local PostgreSQL instead of Supabase
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: sharpflow-postgres
  #   environment:
  #     - POSTGRES_DB=sharpflow
  #     - POSTGRES_USER=sharpflow
  #     - POSTGRES_PASSWORD=sharpflow_dev_password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./database-setup:/docker-entrypoint-initdb.d
  #   networks:
  #     - sharpflow-network
  #   restart: unless-stopped

volumes:
  redis_data:
    driver: local
  # postgres_data:
  #   driver: local

networks:
  sharpflow-network:
    driver: bridge
